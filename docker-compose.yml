version: '3'

services:

  datadog:
    image: datadog/agent
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=datadoghq.com
      - DD_LOGS_ENABLED=true
      - DD_APM_ENABLED=true
      - DD_STEP=PT10S
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
    labels:
      com.datadoghq.ad.logs: '[{"source": "java", "service": "api", "log_processing_rules": [{"type": "multi_line", "name": "log_start_with_date", "pattern" : "\\d{4}-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])"}]}]'

  follow-api:
    container_name: follow-api
    depends_on:
      - follow_db
      - datadog
    ports:
      - 8081:8080
    image: ghcr.io/nico-werner/jibberjabber-followers-api:main
    environment:
      DB_USER: sa
      DB_PASSWORD: password
      DB_NAME: postgres
      DB_HOST: host.docker.internal
      DB_PORT: 5437
      #DATADOG CONFIGURATION
      DD_API_KEY: ${DD_API_KEY}
      DD_SITE: datadoghq.com
      DD_LOGS_ENABLED: true
      DD_APM_ENABLED: true
      DD_STEP: PT10S
      KC_URL: jibberjabberg2.ml/auth
      KEYCLOAK_POST_SECRET: GYul4Ik9QjP8rkbaxvv9pqE9z4XegLyf

  follow_db:
    container_name: follow_db
    image: postgres:12
    ports:
      - 5437:5432
    environment:
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: password
      POSTGRES_DB: follow-db
    volumes:
      - followdata:/var/lib/postgresql/data

  post-api:
    container_name: post-api
    depends_on:
      - db
      - datadog
    image: ghcr.io/nico-werner/jibberjabber-posts-api:main
    ports:
      - 8082:8080
    environment:
      DB_USER: sa
      DB_PASSWORD: password
      DB_NAME: postgres
      DB_HOST: host.docker.internal
      DB_PORT: 5433
      #DATADOG CONFIGURATION
      DD_API_KEY: ${DD_API_KEY}
      DD_SITE: datadoghq.com
      DD_LOGS_ENABLED: true
      DD_APM_ENABLED: true
      DD_STEP: PT10S
      KC_URL: jibberjabberg2.ml/auth
      KEYCLOAK_POST_SECRET: gGdu8v6i4m95k5Wh6aAQge8zSFU2t6Ax


  db:
    container_name: postgres_db
    image: postgres:12
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: password
      POSTGRES_DB: compose-db
    volumes:
      - pgdata:/var/lib/postgresql/data

  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    depends_on:
      - keycloak-db
    ports:
      - 8080:8080
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      DB_VENDOR: postgres
      DB_ADDR: keycloak-db
      PROXY_ADDRESS_FORWARDING: true
      KC_PROXY: passthrough
      KEYCLOAK_PROXY: passthrough

  keycloak-db:
    container_name: keycloak-db
    image: postgres:12
    ports:
      - 5436:5432
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
      POSTGRES_DB: keycloak
    volumes:
      - keycloakdata:/var/lib/postgresql/data

  reverse-proxy:
    container_name: jibber-jabber-reverse-proxy
    image: ghcr.io/catalinamendizabal/jibber-jabber-base-ui:develop
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/letsencrypt/:ro

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

volumes:
  pgdata:
    external: true
  keycloakdata:
    external: true
  followdata:
    external: true

networks:
  keycloak-net:
      external: true